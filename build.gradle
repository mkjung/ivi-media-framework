buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

def getVersionCode(manifestFile) {
	def manifestParser = new com.android.builder.core.DefaultManifestParser();
	return manifestParser.getVersionCode(manifestFile);
}

def getVersionName(manifestFile) {
	def manifestParser = new com.android.builder.core.DefaultManifestParser();
	return manifestParser.getVersionName(manifestFile);
}

def manifestFile = file(android.sourceSets.main.manifest.srcFile);

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
        }
    }

    dataBinding {
        enabled = true
    }
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 23
        versionCode getVersionCode(manifestFile)
        versionName getVersionName(manifestFile)
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def frameworkVersionName = getVersionName(manifestFile)
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "" + project.POM_ARTIFACT_ID + "-${frameworkVersionName}.aar"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:design:24.1.1'
    compile 'com.android.support:preference-v7:24.1.1'
    compile 'com.android.support:leanback-v17:24.1.1'
    compile 'de.timroes:aXMLRPC:1.8.1'
    compile 'io.github.mkjung:vlc-android-sdk-ivi:0.0.1'
    testCompile 'junit:junit:4.12'
}

allprojects {
    version = getVersionName(manifestFile)
    group = GROUP

    repositories {
        jcenter()
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging project.POM_PACKAGING
                name project.POM_NAME
                description project.POM_DESCRIPTION
                url project.POM_URL

                licenses {
                    license {
                        name project.POM_LICENCE_NAME
                        url project.POM_LICENCE_URL
                        distribution project.POM_LICENCE_DIST
                    }
                }
                developers {
                    developer {
                        id project.POM_DEVELOPER_ID
                        name project.POM_DEVELOPER_NAME
                    }
                }
                scm {
                    connection project.POM_SCM_CONNECTION
                    developerConnection project.POM_SCM_DEV_CONNECTION
                    url project.POM_SCM_URL
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
